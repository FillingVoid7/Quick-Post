services:
  # Redis Service
  redis:
    image: redis:7-alpine
    container_name: quickpost-redis
    restart: unless-stopped
    # Remove external port mapping - app communicates internally
    # ports:
    #   - "6380:6379"  # Use 6380 externally if you need direct access
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --appendfsync everysec
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    networks:
      - quickpost-network

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: quickpost-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NEXT_TELEMETRY_DISABLED=1
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - quickpost-network
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = { hostname: 'localhost', port: 3000, path: '/api/health', method: 'GET', timeout: 3000 }; const req = http.request(options, (res) => { process.exit(res.statusCode === 200 ? 0 : 1); }); req.on('error', () => process.exit(1)); req.on('timeout', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# Volumes for persistent data
volumes:
  redis_data:
    driver: local

# Networks
networks:
  quickpost-network:
    driver: bridge
